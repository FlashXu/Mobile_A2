# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CreateDistance(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, start_time: str=None, distance: float=None):  # noqa: E501
        """CreateDistance - a model defined in Swagger

        :param id: The id of this CreateDistance.  # noqa: E501
        :type id: str
        :param start_time: The start_time of this CreateDistance.  # noqa: E501
        :type start_time: str
        :param distance: The distance of this CreateDistance.  # noqa: E501
        :type distance: float
        """
        self.swagger_types = {
            'id': str,
            'start_time': str,
            'distance': float
        }

        self.attribute_map = {
            'id': '_id',
            'start_time': 'start_time',
            'distance': 'distance'
        }

        self._id = id
        self._start_time = start_time
        self._distance = distance

    @classmethod
    def from_dict(cls, dikt) -> 'CreateDistance':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The createDistance of this CreateDistance.  # noqa: E501
        :rtype: CreateDistance
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this CreateDistance.


        :return: The id of this CreateDistance.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this CreateDistance.


        :param id: The id of this CreateDistance.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def start_time(self) -> str:
        """Gets the start_time of this CreateDistance.


        :return: The start_time of this CreateDistance.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time: str):
        """Sets the start_time of this CreateDistance.


        :param start_time: The start_time of this CreateDistance.
        :type start_time: str
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")  # noqa: E501

        self._start_time = start_time

    @property
    def distance(self) -> float:
        """Gets the distance of this CreateDistance.


        :return: The distance of this CreateDistance.
        :rtype: float
        """
        return self._distance

    @distance.setter
    def distance(self, distance: float):
        """Sets the distance of this CreateDistance.


        :param distance: The distance of this CreateDistance.
        :type distance: float
        """
        if distance is None:
            raise ValueError("Invalid value for `distance`, must not be `None`")  # noqa: E501

        self._distance = distance
